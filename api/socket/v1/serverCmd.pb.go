// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: serverCmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerCmd int32

const (
	// 通用
	ServerCmd_ServerCmdUnspecified ServerCmd = 0
	ServerCmd_ServerCmdLogin       ServerCmd = 1   //登录 消息体 ServerLogin
	ServerCmd_ServerCmdItemUpdate  ServerCmd = 101 //资产变更 消息体 ServerItemUpdate
	ServerCmd_ServerCmdMarquee     ServerCmd = 102 //跑马灯 消息体 ServerMarquee
	// 牌桌
	ServerCmd_ServerCmdGoToJoin     ServerCmd = 1000 //服务端通知加入 消息体 ServerGoToJoin
	ServerCmd_ServerCmdSelfJoin     ServerCmd = 1001 //自己加入 消息体 ServerSelfJoin
	ServerCmd_ServerCmdUserJoin     ServerCmd = 1002 //其他用户加入 消息体 ServerUserJoin
	ServerCmd_ServerCmdUserJoining  ServerCmd = 1003 //其他用户加载中进度 消息体 ServerUserJoining
	ServerCmd_ServerCmdSelfEnter    ServerCmd = 1004 //自己加载完成 消息体 ServerSelfEnter
	ServerCmd_ServerCmdUserEnter    ServerCmd = 1005 //其他用户加载完成 消息体 ServerUserEnter
	ServerCmd_ServerCmdUserState    ServerCmd = 1006 //其他用户状态变更 消息体 ServerUserState
	ServerCmd_ServerCmdSelfLeave    ServerCmd = 1007 //用户离开 消息体 无
	ServerCmd_ServerCmdTableStart   ServerCmd = 1008 //牌桌开始 消息体 ServerTableStart
	ServerCmd_ServerCmdTableEnd     ServerCmd = 1009 //牌桌结束 消息体 ServerTableEnd
	ServerCmd_ServerCmdTableRestart ServerCmd = 1010 //没人叫分，重新开始 消息体 ServerTableRestart
	ServerCmd_ServerCmdCheckInGame  ServerCmd = 1011 //查询是否在游戏中 消息体 ServerCheckInGame
	ServerCmd_ServerCmdRateChange   ServerCmd = 1012 //倍率改变 消息体 ServerRateChange
	ServerCmd_ServerCmdDeckEnd      ServerCmd = 1013 //单副牌结算 消息体 ServerDeckEnd
	ServerCmd_ServerCmdChat         ServerCmd = 1014 //牌桌聊天 消息体 ServerChat
	ServerCmd_ServerCmdVote         ServerCmd = 1015 //解散房间投票 消息体 ServerVote |解散后返回ServerCmdTableEnd
	ServerCmd_ServerCmdPrepare      ServerCmd = 1016 //准备 消息体 ServerPrepare
	ServerCmd_ServerCmdUserExit     ServerCmd = 1017 //退出牌桌 消息体 ServerUserExit
	// 玩法
	ServerCmd_ServerCmdDeal         ServerCmd = 3001 //发牌 消息体 ServerDeal
	ServerCmd_ServerCmdTakeLandlord ServerCmd = 3002 //取得坑主并挖底牌 消息体 ServerTakeLandlord
	ServerCmd_ServerCmdToCallRate   ServerCmd = 3003 //到谁叫分 ServerToCallRate
	ServerCmd_ServerCmdToCallDouble ServerCmd = 3004 //到谁加倍  消息体 ServerToCallDouble
	ServerCmd_ServerCmdToPlay       ServerCmd = 3005 //到谁出牌  消息体 ServerToPlay
	ServerCmd_ServerCmdToFollow     ServerCmd = 3006 //到谁跟牌  消息体 ServerToFollow
	ServerCmd_ServerCmdToCantFollow ServerCmd = 3007 //到谁要不起 消息体 ServerToCantFollow
	ServerCmd_ServerCmdCallRate     ServerCmd = 3008 //用户叫分 消息体 ServerCallRate
	ServerCmd_ServerCmdCallDouble   ServerCmd = 3009 //用户加倍 消息体 ServerCallDouble
	ServerCmd_ServerCmdPlay         ServerCmd = 3010 //用户出牌 消息体 ServerPlay
	ServerCmd_ServerCmdPass         ServerCmd = 3011 //用户过牌 消息体 ServerPass
	ServerCmd_ServerCmdFollow       ServerCmd = 3012 //用户跟牌 消息体 ServerFollow
)

// Enum value maps for ServerCmd.
var (
	ServerCmd_name = map[int32]string{
		0:    "ServerCmdUnspecified",
		1:    "ServerCmdLogin",
		101:  "ServerCmdItemUpdate",
		102:  "ServerCmdMarquee",
		1000: "ServerCmdGoToJoin",
		1001: "ServerCmdSelfJoin",
		1002: "ServerCmdUserJoin",
		1003: "ServerCmdUserJoining",
		1004: "ServerCmdSelfEnter",
		1005: "ServerCmdUserEnter",
		1006: "ServerCmdUserState",
		1007: "ServerCmdSelfLeave",
		1008: "ServerCmdTableStart",
		1009: "ServerCmdTableEnd",
		1010: "ServerCmdTableRestart",
		1011: "ServerCmdCheckInGame",
		1012: "ServerCmdRateChange",
		1013: "ServerCmdDeckEnd",
		1014: "ServerCmdChat",
		1015: "ServerCmdVote",
		1016: "ServerCmdPrepare",
		1017: "ServerCmdUserExit",
		3001: "ServerCmdDeal",
		3002: "ServerCmdTakeLandlord",
		3003: "ServerCmdToCallRate",
		3004: "ServerCmdToCallDouble",
		3005: "ServerCmdToPlay",
		3006: "ServerCmdToFollow",
		3007: "ServerCmdToCantFollow",
		3008: "ServerCmdCallRate",
		3009: "ServerCmdCallDouble",
		3010: "ServerCmdPlay",
		3011: "ServerCmdPass",
		3012: "ServerCmdFollow",
	}
	ServerCmd_value = map[string]int32{
		"ServerCmdUnspecified":  0,
		"ServerCmdLogin":        1,
		"ServerCmdItemUpdate":   101,
		"ServerCmdMarquee":      102,
		"ServerCmdGoToJoin":     1000,
		"ServerCmdSelfJoin":     1001,
		"ServerCmdUserJoin":     1002,
		"ServerCmdUserJoining":  1003,
		"ServerCmdSelfEnter":    1004,
		"ServerCmdUserEnter":    1005,
		"ServerCmdUserState":    1006,
		"ServerCmdSelfLeave":    1007,
		"ServerCmdTableStart":   1008,
		"ServerCmdTableEnd":     1009,
		"ServerCmdTableRestart": 1010,
		"ServerCmdCheckInGame":  1011,
		"ServerCmdRateChange":   1012,
		"ServerCmdDeckEnd":      1013,
		"ServerCmdChat":         1014,
		"ServerCmdVote":         1015,
		"ServerCmdPrepare":      1016,
		"ServerCmdUserExit":     1017,
		"ServerCmdDeal":         3001,
		"ServerCmdTakeLandlord": 3002,
		"ServerCmdToCallRate":   3003,
		"ServerCmdToCallDouble": 3004,
		"ServerCmdToPlay":       3005,
		"ServerCmdToFollow":     3006,
		"ServerCmdToCantFollow": 3007,
		"ServerCmdCallRate":     3008,
		"ServerCmdCallDouble":   3009,
		"ServerCmdPlay":         3010,
		"ServerCmdPass":         3011,
		"ServerCmdFollow":       3012,
	}
)

func (x ServerCmd) Enum() *ServerCmd {
	p := new(ServerCmd)
	*p = x
	return p
}

func (x ServerCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_serverCmd_proto_enumTypes[0].Descriptor()
}

func (ServerCmd) Type() protoreflect.EnumType {
	return &file_serverCmd_proto_enumTypes[0]
}

func (x ServerCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerCmd.Descriptor instead.
func (ServerCmd) EnumDescriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{0}
}

type InGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId       string       `protobuf:"bytes,1,opt,name=GameId,proto3" json:"GameId,omitempty"`
	GameType     GameType     `protobuf:"varint,2,opt,name=GameType,proto3,enum=GameType" json:"GameType,omitempty"`             //游戏类型
	GameCategory GameCategory `protobuf:"varint,3,opt,name=GameCategory,proto3,enum=GameCategory" json:"GameCategory,omitempty"` //游戏类别
	TableId      string       `protobuf:"bytes,4,opt,name=TableId,proto3" json:"TableId,omitempty"`
}

func (x *InGame) Reset() {
	*x = InGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InGame) ProtoMessage() {}

func (x *InGame) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InGame.ProtoReflect.Descriptor instead.
func (*InGame) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{0}
}

func (x *InGame) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *InGame) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GameTypeUnspecified
}

func (x *InGame) GetGameCategory() GameCategory {
	if x != nil {
		return x.GameCategory
	}
	return GameCategory_GameCategoryUnspecified
}

func (x *InGame) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type ServerLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InGame *InGame `protobuf:"bytes,1,opt,name=InGame,proto3,oneof" json:"InGame,omitempty"`
}

func (x *ServerLogin) Reset() {
	*x = ServerLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerLogin) ProtoMessage() {}

func (x *ServerLogin) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerLogin.ProtoReflect.Descriptor instead.
func (*ServerLogin) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{1}
}

func (x *ServerLogin) GetInGame() *InGame {
	if x != nil {
		return x.InGame
	}
	return nil
}

type ServerItemUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Item `protobuf:"bytes,1,rep,name=Item,proto3" json:"Item,omitempty"`
}

func (x *ServerItemUpdate) Reset() {
	*x = ServerItemUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerItemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerItemUpdate) ProtoMessage() {}

func (x *ServerItemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerItemUpdate.ProtoReflect.Descriptor instead.
func (*ServerItemUpdate) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{2}
}

func (x *ServerItemUpdate) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type ServerMarquee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *ServerMarquee) Reset() {
	*x = ServerMarquee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMarquee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMarquee) ProtoMessage() {}

func (x *ServerMarquee) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMarquee.ProtoReflect.Descriptor instead.
func (*ServerMarquee) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{3}
}

func (x *ServerMarquee) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ServerGoToJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InGame *InGame `protobuf:"bytes,1,opt,name=InGame,proto3" json:"InGame,omitempty"`
}

func (x *ServerGoToJoin) Reset() {
	*x = ServerGoToJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGoToJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGoToJoin) ProtoMessage() {}

func (x *ServerGoToJoin) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGoToJoin.ProtoReflect.Descriptor instead.
func (*ServerGoToJoin) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{4}
}

func (x *ServerGoToJoin) GetInGame() *InGame {
	if x != nil {
		return x.InGame
	}
	return nil
}

type ServerSelfJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=Table,proto3" json:"Table,omitempty"` //牌桌数据
}

func (x *ServerSelfJoin) Reset() {
	*x = ServerSelfJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSelfJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSelfJoin) ProtoMessage() {}

func (x *ServerSelfJoin) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSelfJoin.ProtoReflect.Descriptor instead.
func (*ServerSelfJoin) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{5}
}

func (x *ServerSelfJoin) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type ServerUserJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"` //用户数据
}

func (x *ServerUserJoin) Reset() {
	*x = ServerUserJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUserJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUserJoin) ProtoMessage() {}

func (x *ServerUserJoin) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUserJoin.ProtoReflect.Descriptor instead.
func (*ServerUserJoin) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{6}
}

func (x *ServerUserJoin) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ServerUserJoining struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Percent uint32 `protobuf:"varint,2,opt,name=Percent,proto3" json:"Percent,omitempty"` //加载进度
}

func (x *ServerUserJoining) Reset() {
	*x = ServerUserJoining{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUserJoining) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUserJoining) ProtoMessage() {}

func (x *ServerUserJoining) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUserJoining.ProtoReflect.Descriptor instead.
func (*ServerUserJoining) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{7}
}

func (x *ServerUserJoining) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerUserJoining) GetPercent() uint32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type ServerSelfEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=Table,proto3" json:"Table,omitempty"` //牌桌数据
}

func (x *ServerSelfEnter) Reset() {
	*x = ServerSelfEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSelfEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSelfEnter) ProtoMessage() {}

func (x *ServerSelfEnter) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSelfEnter.ProtoReflect.Descriptor instead.
func (*ServerSelfEnter) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{8}
}

func (x *ServerSelfEnter) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type ServerUserEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"` //用户数据
}

func (x *ServerUserEnter) Reset() {
	*x = ServerUserEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUserEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUserEnter) ProtoMessage() {}

func (x *ServerUserEnter) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUserEnter.ProtoReflect.Descriptor instead.
func (*ServerUserEnter) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{9}
}

func (x *ServerUserEnter) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ServerUserState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Online bool   `protobuf:"varint,2,opt,name=Online,proto3" json:"Online,omitempty"` // 是否在线
	Leaved bool   `protobuf:"varint,3,opt,name=Leaved,proto3" json:"Leaved,omitempty"` // 是否离开
	Hosted bool   `protobuf:"varint,4,opt,name=Hosted,proto3" json:"Hosted,omitempty"` // 是否托管
}

func (x *ServerUserState) Reset() {
	*x = ServerUserState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUserState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUserState) ProtoMessage() {}

func (x *ServerUserState) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUserState.ProtoReflect.Descriptor instead.
func (*ServerUserState) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{10}
}

func (x *ServerUserState) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerUserState) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *ServerUserState) GetLeaved() bool {
	if x != nil {
		return x.Leaved
	}
	return false
}

func (x *ServerUserState) GetHosted() bool {
	if x != nil {
		return x.Hosted
	}
	return false
}

type ServerUserExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
}

func (x *ServerUserExit) Reset() {
	*x = ServerUserExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUserExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUserExit) ProtoMessage() {}

func (x *ServerUserExit) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUserExit.ProtoReflect.Descriptor instead.
func (*ServerUserExit) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{11}
}

func (x *ServerUserExit) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ServerTableStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeck uint32 `protobuf:"varint,1,opt,name=CurrentDeck,proto3" json:"CurrentDeck,omitempty"` //当前第几副牌
}

func (x *ServerTableStart) Reset() {
	*x = ServerTableStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTableStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTableStart) ProtoMessage() {}

func (x *ServerTableStart) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTableStart.ProtoReflect.Descriptor instead.
func (*ServerTableStart) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{12}
}

func (x *ServerTableStart) GetCurrentDeck() uint32 {
	if x != nil {
		return x.CurrentDeck
	}
	return 0
}

type ServerDeckEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeck uint32         `protobuf:"varint,1,opt,name=CurrentDeck,proto3" json:"CurrentDeck,omitempty"` //当前第几副牌
	Spring      uint32         `protobuf:"varint,2,opt,name=Spring,proto3" json:"Spring,omitempty"`           //春天 0:无 1:春天 2:反春天
	Rate        uint32         `protobuf:"varint,3,opt,name=Rate,proto3" json:"Rate,omitempty"`               //倍率
	Users       []*UserDeckEnd `protobuf:"bytes,4,rep,name=Users,proto3" json:"Users,omitempty"`              //所有用户结算数据
}

func (x *ServerDeckEnd) Reset() {
	*x = ServerDeckEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeckEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeckEnd) ProtoMessage() {}

func (x *ServerDeckEnd) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeckEnd.ProtoReflect.Descriptor instead.
func (*ServerDeckEnd) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{13}
}

func (x *ServerDeckEnd) GetCurrentDeck() uint32 {
	if x != nil {
		return x.CurrentDeck
	}
	return 0
}

func (x *ServerDeckEnd) GetSpring() uint32 {
	if x != nil {
		return x.Spring
	}
	return 0
}

func (x *ServerDeckEnd) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ServerDeckEnd) GetUsers() []*UserDeckEnd {
	if x != nil {
		return x.Users
	}
	return nil
}

type ServerTableEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeck uint32          `protobuf:"varint,1,opt,name=CurrentDeck,proto3" json:"CurrentDeck,omitempty"` //当前第几副牌
	Users       []*UserTableEnd `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`              //所有用户结算数据
	Decks       []*Deck         `protobuf:"bytes,3,rep,name=Decks,proto3" json:"Decks,omitempty"`              //每副牌结算数据列表
}

func (x *ServerTableEnd) Reset() {
	*x = ServerTableEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTableEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTableEnd) ProtoMessage() {}

func (x *ServerTableEnd) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTableEnd.ProtoReflect.Descriptor instead.
func (*ServerTableEnd) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{14}
}

func (x *ServerTableEnd) GetCurrentDeck() uint32 {
	if x != nil {
		return x.CurrentDeck
	}
	return 0
}

func (x *ServerTableEnd) GetUsers() []*UserTableEnd {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ServerTableEnd) GetDecks() []*Deck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type ServerTableRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeck uint32 `protobuf:"varint,1,opt,name=CurrentDeck,proto3" json:"CurrentDeck,omitempty"` //当前第几副牌
}

func (x *ServerTableRestart) Reset() {
	*x = ServerTableRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTableRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTableRestart) ProtoMessage() {}

func (x *ServerTableRestart) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTableRestart.ProtoReflect.Descriptor instead.
func (*ServerTableRestart) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{15}
}

func (x *ServerTableRestart) GetCurrentDeck() uint32 {
	if x != nil {
		return x.CurrentDeck
	}
	return 0
}

type ServerCheckInGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InGame *InGame `protobuf:"bytes,1,opt,name=InGame,proto3,oneof" json:"InGame,omitempty"`
}

func (x *ServerCheckInGame) Reset() {
	*x = ServerCheckInGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCheckInGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCheckInGame) ProtoMessage() {}

func (x *ServerCheckInGame) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCheckInGame.ProtoReflect.Descriptor instead.
func (*ServerCheckInGame) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{16}
}

func (x *ServerCheckInGame) GetInGame() *InGame {
	if x != nil {
		return x.InGame
	}
	return nil
}

type ServerDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards     []*UserCards `protobuf:"bytes,1,rep,name=Cards,proto3" json:"Cards,omitempty"`         //所有用户手牌 其他用户牌为0x00
	HoleCards []byte       `protobuf:"bytes,2,opt,name=HoleCards,proto3" json:"HoleCards,omitempty"` //4张底牌0x00
}

func (x *ServerDeal) Reset() {
	*x = ServerDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeal) ProtoMessage() {}

func (x *ServerDeal) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeal.ProtoReflect.Descriptor instead.
func (*ServerDeal) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{17}
}

func (x *ServerDeal) GetCards() []*UserCards {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *ServerDeal) GetHoleCards() []byte {
	if x != nil {
		return x.HoleCards
	}
	return nil
}

type ServerTakeLandlord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`  //地主
	Cards []byte `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"` //翻开4张底牌
}

func (x *ServerTakeLandlord) Reset() {
	*x = ServerTakeLandlord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTakeLandlord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTakeLandlord) ProtoMessage() {}

func (x *ServerTakeLandlord) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTakeLandlord.ProtoReflect.Descriptor instead.
func (*ServerTakeLandlord) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{18}
}

func (x *ServerTakeLandlord) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerTakeLandlord) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ServerToCallRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat        uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Timeout     uint32 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`         //超时秒数
	CurrentRate uint32 `protobuf:"varint,3,opt,name=CurrentRate,proto3" json:"CurrentRate,omitempty"` //当前叫分数
}

func (x *ServerToCallRate) Reset() {
	*x = ServerToCallRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToCallRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToCallRate) ProtoMessage() {}

func (x *ServerToCallRate) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToCallRate.ProtoReflect.Descriptor instead.
func (*ServerToCallRate) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{19}
}

func (x *ServerToCallRate) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerToCallRate) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ServerToCallRate) GetCurrentRate() uint32 {
	if x != nil {
		return x.CurrentRate
	}
	return 0
}

type ServerToCallDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"` //超时秒数
}

func (x *ServerToCallDouble) Reset() {
	*x = ServerToCallDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToCallDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToCallDouble) ProtoMessage() {}

func (x *ServerToCallDouble) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToCallDouble.ProtoReflect.Descriptor instead.
func (*ServerToCallDouble) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{20}
}

func (x *ServerToCallDouble) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerToCallDouble) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ServerToPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"` //超时秒数
}

func (x *ServerToPlay) Reset() {
	*x = ServerToPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToPlay) ProtoMessage() {}

func (x *ServerToPlay) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToPlay.ProtoReflect.Descriptor instead.
func (*ServerToPlay) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{21}
}

func (x *ServerToPlay) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerToPlay) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ServerToFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"` //超时秒数
	Cards   []byte `protobuf:"bytes,3,opt,name=Cards,proto3" json:"Cards,omitempty"`      //上手出牌
}

func (x *ServerToFollow) Reset() {
	*x = ServerToFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToFollow) ProtoMessage() {}

func (x *ServerToFollow) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToFollow.ProtoReflect.Descriptor instead.
func (*ServerToFollow) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{22}
}

func (x *ServerToFollow) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerToFollow) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ServerToFollow) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ServerToCantFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"` //超时秒数
}

func (x *ServerToCantFollow) Reset() {
	*x = ServerToCantFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToCantFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToCantFollow) ProtoMessage() {}

func (x *ServerToCantFollow) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToCantFollow.ProtoReflect.Descriptor instead.
func (*ServerToCantFollow) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{23}
}

func (x *ServerToCantFollow) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerToCantFollow) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ServerCallRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Rate uint32 `protobuf:"varint,2,opt,name=Rate,proto3" json:"Rate,omitempty"` //叫几分 对应值1、2、3
}

func (x *ServerCallRate) Reset() {
	*x = ServerCallRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCallRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCallRate) ProtoMessage() {}

func (x *ServerCallRate) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCallRate.ProtoReflect.Descriptor instead.
func (*ServerCallRate) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{24}
}

func (x *ServerCallRate) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerCallRate) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ServerCallDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Double uint32 `protobuf:"varint,2,opt,name=Double,proto3" json:"Double,omitempty"` //加倍取值1 超级加倍取值2
}

func (x *ServerCallDouble) Reset() {
	*x = ServerCallDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCallDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCallDouble) ProtoMessage() {}

func (x *ServerCallDouble) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCallDouble.ProtoReflect.Descriptor instead.
func (*ServerCallDouble) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{25}
}

func (x *ServerCallDouble) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerCallDouble) GetDouble() uint32 {
	if x != nil {
		return x.Double
	}
	return 0
}

type ServerPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Cards []byte `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`
}

func (x *ServerPlay) Reset() {
	*x = ServerPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlay) ProtoMessage() {}

func (x *ServerPlay) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlay.ProtoReflect.Descriptor instead.
func (*ServerPlay) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{26}
}

func (x *ServerPlay) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerPlay) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ServerPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
}

func (x *ServerPass) Reset() {
	*x = ServerPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPass) ProtoMessage() {}

func (x *ServerPass) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPass.ProtoReflect.Descriptor instead.
func (*ServerPass) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{27}
}

func (x *ServerPass) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ServerFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Cards []byte `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards,omitempty"`
}

func (x *ServerFollow) Reset() {
	*x = ServerFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFollow) ProtoMessage() {}

func (x *ServerFollow) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFollow.ProtoReflect.Descriptor instead.
func (*ServerFollow) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{28}
}

func (x *ServerFollow) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerFollow) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ServerRateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate uint32 `protobuf:"varint,1,opt,name=Rate,proto3" json:"Rate,omitempty"`
}

func (x *ServerRateChange) Reset() {
	*x = ServerRateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRateChange) ProtoMessage() {}

func (x *ServerRateChange) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRateChange.ProtoReflect.Descriptor instead.
func (*ServerRateChange) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{29}
}

func (x *ServerRateChange) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ServerChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat     uint32   `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Type     ChatType `protobuf:"varint,2,opt,name=Type,proto3,enum=ChatType" json:"Type,omitempty"`
	ID       uint32   `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	ToSeat   uint32   `protobuf:"varint,4,opt,name=ToSeat,proto3" json:"ToSeat,omitempty"`
	Quantity uint32   `protobuf:"varint,5,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
}

func (x *ServerChat) Reset() {
	*x = ServerChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerChat) ProtoMessage() {}

func (x *ServerChat) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerChat.ProtoReflect.Descriptor instead.
func (*ServerChat) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{30}
}

func (x *ServerChat) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerChat) GetType() ChatType {
	if x != nil {
		return x.Type
	}
	return ChatType_ChatTypeUnspecified
}

func (x *ServerChat) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ServerChat) GetToSeat() uint32 {
	if x != nil {
		return x.ToSeat
	}
	return 0
}

func (x *ServerChat) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ServerVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserVote []*UserVote `protobuf:"bytes,1,rep,name=UserVote,proto3" json:"UserVote,omitempty"`
	Timeout  uint32      `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"` //超时秒数
}

func (x *ServerVote) Reset() {
	*x = ServerVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVote) ProtoMessage() {}

func (x *ServerVote) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVote.ProtoReflect.Descriptor instead.
func (*ServerVote) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{31}
}

func (x *ServerVote) GetUserVote() []*UserVote {
	if x != nil {
		return x.UserVote
	}
	return nil
}

func (x *ServerVote) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ServerPrepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32 `protobuf:"varint,1,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Ready bool   `protobuf:"varint,2,opt,name=Ready,proto3" json:"Ready,omitempty"`
}

func (x *ServerPrepare) Reset() {
	*x = ServerPrepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serverCmd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPrepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPrepare) ProtoMessage() {}

func (x *ServerPrepare) ProtoReflect() protoreflect.Message {
	mi := &file_serverCmd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPrepare.ProtoReflect.Descriptor instead.
func (*ServerPrepare) Descriptor() ([]byte, []int) {
	return file_serverCmd_proto_rawDescGZIP(), []int{32}
}

func (x *ServerPrepare) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ServerPrepare) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

var File_serverCmd_proto protoreflect.FileDescriptor

var file_serverCmd_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01,
	0x0a, 0x06, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x49, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x72,
	0x71, 0x75, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x22, 0x31, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x6f, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x49, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x06, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x66, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x22, 0x24, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x22,
	0x34, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x70, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x45,
	0x6e, 0x64, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x74, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x23, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x05, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x22,
	0x36, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06,
	0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x6f, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x48, 0x6f, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x42, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x50,
	0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x54, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x6f, 0x43, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x38, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x20, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x22,
	0x38, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x52, 0x61, 0x74,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x53, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x53, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x6f, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4d, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x2a, 0xc0, 0x06, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x55, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x10, 0x66, 0x12, 0x16, 0x0a, 0x11,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x47, 0x6f, 0x54, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x10, 0xe8, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x53, 0x65, 0x6c, 0x66, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0xe9, 0x07, 0x12, 0x16, 0x0a, 0x11,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x10, 0xea, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0xeb, 0x07, 0x12,
	0x17, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x53, 0x65, 0x6c, 0x66,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xec, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xed,
	0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xee, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x10, 0xef, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xf0, 0x07, 0x12, 0x16, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x64, 0x10, 0xf1, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x10, 0xf2,
	0x07, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x10, 0xf3, 0x07, 0x12, 0x18, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x10, 0xf4, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x10, 0xf5, 0x07, 0x12, 0x12, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x43, 0x68, 0x61, 0x74, 0x10, 0xf6,
	0x07, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x56, 0x6f,
	0x74, 0x65, 0x10, 0xf7, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x10, 0xf8, 0x07, 0x12, 0x16, 0x0a, 0x11,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69,
	0x74, 0x10, 0xf9, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x44, 0x65, 0x61, 0x6c, 0x10, 0xb9, 0x17, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x61, 0x6b, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72,
	0x64, 0x10, 0xba, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x54, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x10, 0xbb, 0x17, 0x12, 0x1a,
	0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x10, 0xbc, 0x17, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x10, 0xbd, 0x17,
	0x12, 0x16, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x6f, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0xbe, 0x17, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x10, 0xbf, 0x17, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x10, 0xc0, 0x17, 0x12, 0x18, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x10, 0xc1, 0x17, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x10, 0xc2, 0x17, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x73, 0x73, 0x10, 0xc3, 0x17, 0x12, 0x14,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x10, 0xc4, 0x17, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_serverCmd_proto_rawDescOnce sync.Once
	file_serverCmd_proto_rawDescData = file_serverCmd_proto_rawDesc
)

func file_serverCmd_proto_rawDescGZIP() []byte {
	file_serverCmd_proto_rawDescOnce.Do(func() {
		file_serverCmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_serverCmd_proto_rawDescData)
	})
	return file_serverCmd_proto_rawDescData
}

var file_serverCmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_serverCmd_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_serverCmd_proto_goTypes = []interface{}{
	(ServerCmd)(0),             // 0: ServerCmd
	(*InGame)(nil),             // 1: InGame
	(*ServerLogin)(nil),        // 2: ServerLogin
	(*ServerItemUpdate)(nil),   // 3: ServerItemUpdate
	(*ServerMarquee)(nil),      // 4: ServerMarquee
	(*ServerGoToJoin)(nil),     // 5: ServerGoToJoin
	(*ServerSelfJoin)(nil),     // 6: ServerSelfJoin
	(*ServerUserJoin)(nil),     // 7: ServerUserJoin
	(*ServerUserJoining)(nil),  // 8: ServerUserJoining
	(*ServerSelfEnter)(nil),    // 9: ServerSelfEnter
	(*ServerUserEnter)(nil),    // 10: ServerUserEnter
	(*ServerUserState)(nil),    // 11: ServerUserState
	(*ServerUserExit)(nil),     // 12: ServerUserExit
	(*ServerTableStart)(nil),   // 13: ServerTableStart
	(*ServerDeckEnd)(nil),      // 14: ServerDeckEnd
	(*ServerTableEnd)(nil),     // 15: ServerTableEnd
	(*ServerTableRestart)(nil), // 16: ServerTableRestart
	(*ServerCheckInGame)(nil),  // 17: ServerCheckInGame
	(*ServerDeal)(nil),         // 18: ServerDeal
	(*ServerTakeLandlord)(nil), // 19: ServerTakeLandlord
	(*ServerToCallRate)(nil),   // 20: ServerToCallRate
	(*ServerToCallDouble)(nil), // 21: ServerToCallDouble
	(*ServerToPlay)(nil),       // 22: ServerToPlay
	(*ServerToFollow)(nil),     // 23: ServerToFollow
	(*ServerToCantFollow)(nil), // 24: ServerToCantFollow
	(*ServerCallRate)(nil),     // 25: ServerCallRate
	(*ServerCallDouble)(nil),   // 26: ServerCallDouble
	(*ServerPlay)(nil),         // 27: ServerPlay
	(*ServerPass)(nil),         // 28: ServerPass
	(*ServerFollow)(nil),       // 29: ServerFollow
	(*ServerRateChange)(nil),   // 30: ServerRateChange
	(*ServerChat)(nil),         // 31: ServerChat
	(*ServerVote)(nil),         // 32: ServerVote
	(*ServerPrepare)(nil),      // 33: ServerPrepare
	(GameType)(0),              // 34: GameType
	(GameCategory)(0),          // 35: GameCategory
	(*Item)(nil),               // 36: Item
	(*Table)(nil),              // 37: Table
	(*User)(nil),               // 38: User
	(*UserDeckEnd)(nil),        // 39: UserDeckEnd
	(*UserTableEnd)(nil),       // 40: UserTableEnd
	(*Deck)(nil),               // 41: Deck
	(*UserCards)(nil),          // 42: UserCards
	(ChatType)(0),              // 43: ChatType
	(*UserVote)(nil),           // 44: UserVote
}
var file_serverCmd_proto_depIdxs = []int32{
	34, // 0: InGame.GameType:type_name -> GameType
	35, // 1: InGame.GameCategory:type_name -> GameCategory
	1,  // 2: ServerLogin.InGame:type_name -> InGame
	36, // 3: ServerItemUpdate.Item:type_name -> Item
	1,  // 4: ServerGoToJoin.InGame:type_name -> InGame
	37, // 5: ServerSelfJoin.Table:type_name -> Table
	38, // 6: ServerUserJoin.User:type_name -> User
	37, // 7: ServerSelfEnter.Table:type_name -> Table
	38, // 8: ServerUserEnter.User:type_name -> User
	39, // 9: ServerDeckEnd.Users:type_name -> UserDeckEnd
	40, // 10: ServerTableEnd.Users:type_name -> UserTableEnd
	41, // 11: ServerTableEnd.Decks:type_name -> Deck
	1,  // 12: ServerCheckInGame.InGame:type_name -> InGame
	42, // 13: ServerDeal.Cards:type_name -> UserCards
	43, // 14: ServerChat.Type:type_name -> ChatType
	44, // 15: ServerVote.UserVote:type_name -> UserVote
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_serverCmd_proto_init() }
func file_serverCmd_proto_init() {
	if File_serverCmd_proto != nil {
		return
	}
	file_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_serverCmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerItemUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMarquee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGoToJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSelfJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUserJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUserJoining); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSelfEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUserEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUserState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUserExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTableStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeckEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTableEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTableRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCheckInGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTakeLandlord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToCallRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToCallDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToCantFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCallRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCallDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serverCmd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPrepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_serverCmd_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_serverCmd_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_serverCmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_serverCmd_proto_goTypes,
		DependencyIndexes: file_serverCmd_proto_depIdxs,
		EnumInfos:         file_serverCmd_proto_enumTypes,
		MessageInfos:      file_serverCmd_proto_msgTypes,
	}.Build()
	File_serverCmd_proto = out.File
	file_serverCmd_proto_rawDesc = nil
	file_serverCmd_proto_goTypes = nil
	file_serverCmd_proto_depIdxs = nil
}

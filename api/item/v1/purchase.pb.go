// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: item/v1/purchase.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/lulu-ls/st-api/api/wx/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PurchaseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // 商品类型，1-金币，2-钻石
}

func (x *PurchaseListRequest) Reset() {
	*x = PurchaseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseListRequest) ProtoMessage() {}

func (x *PurchaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseListRequest.ProtoReflect.Descriptor instead.
func (*PurchaseListRequest) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseListRequest) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type PurchaseListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*PurchaseListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PurchaseListReply) Reset() {
	*x = PurchaseListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseListReply) ProtoMessage() {}

func (x *PurchaseListReply) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseListReply.ProtoReflect.Descriptor instead.
func (*PurchaseListReply) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{1}
}

func (x *PurchaseListReply) GetList() []*PurchaseListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PurchaseListReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PurchaseListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId           int32   `protobuf:"varint,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`                                 // 商品 id
	Quantity             int32   `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`                                                       // 数量
	Price                float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                                                            // 价格
	ExchangeItemId       int32   `protobuf:"varint,4,opt,name=exchange_item_id,json=exchangeItemId,proto3" json:"exchange_item_id,omitempty"`                   // 支付道具id
	ExchangeItemQuantity int32   `protobuf:"varint,5,opt,name=exchange_item_quantity,json=exchangeItemQuantity,proto3" json:"exchange_item_quantity,omitempty"` // 支付道具数量
	ExchangeItemImage    string  `protobuf:"bytes,6,opt,name=exchange_item_image,json=exchangeItemImage,proto3" json:"exchange_item_image,omitempty"`           // 支付道具图片
	ExchangeItemName     string  `protobuf:"bytes,7,opt,name=exchange_item_name,json=exchangeItemName,proto3" json:"exchange_item_name,omitempty"`              // 支付道具名称
	Subtitle             string  `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                                                        // 副标题
	Tag                  string  `protobuf:"bytes,9,opt,name=tag,proto3" json:"tag,omitempty"`                                                                  // 标签
	Image                string  `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`                                                             // 图片
	ItemId               int32   `protobuf:"varint,11,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                            // 道具 id
	Title                string  `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                                                             // 标题
}

func (x *PurchaseListItem) Reset() {
	*x = PurchaseListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseListItem) ProtoMessage() {}

func (x *PurchaseListItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseListItem.ProtoReflect.Descriptor instead.
func (*PurchaseListItem) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{2}
}

func (x *PurchaseListItem) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *PurchaseListItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PurchaseListItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseListItem) GetExchangeItemId() int32 {
	if x != nil {
		return x.ExchangeItemId
	}
	return 0
}

func (x *PurchaseListItem) GetExchangeItemQuantity() int32 {
	if x != nil {
		return x.ExchangeItemQuantity
	}
	return 0
}

func (x *PurchaseListItem) GetExchangeItemImage() string {
	if x != nil {
		return x.ExchangeItemImage
	}
	return ""
}

func (x *PurchaseListItem) GetExchangeItemName() string {
	if x != nil {
		return x.ExchangeItemName
	}
	return ""
}

func (x *PurchaseListItem) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *PurchaseListItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PurchaseListItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PurchaseListItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *PurchaseListItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type VirtualBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                // app id
	ChannelId  int32 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`    // channel id
	PurchaseId int32 `protobuf:"varint,3,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"` // 道具配置 id
	UserId     int64 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户 id
	OrderId    int64 `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // order id
}

func (x *VirtualBuyRequest) Reset() {
	*x = VirtualBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualBuyRequest) ProtoMessage() {}

func (x *VirtualBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualBuyRequest.ProtoReflect.Descriptor instead.
func (*VirtualBuyRequest) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualBuyRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *VirtualBuyRequest) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *VirtualBuyRequest) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *VirtualBuyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VirtualBuyRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type VirtualBuyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPayed      v1.VirtualPayStatus `protobuf:"varint,1,opt,name=is_payed,json=isPayed,proto3,enum=api.wx.v1.VirtualPayStatus" json:"is_payed,omitempty"` // 是否支付成功, 0 否 1是
	Env          int32               `protobuf:"varint,2,opt,name=env,proto3" json:"env,omitempty"`                                                        // 环境配置0：现网环境（也叫正式环境）1：沙箱环境
	OfferId      string              `protobuf:"bytes,3,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`                                  // 支付应用ID（OfferId）
	CurrencyType string              `protobuf:"bytes,4,opt,name=currency_type,json=currencyType,proto3" json:"currency_type,omitempty"`                   // 当前币种 默认 "CNY"
	Platform     string              `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                               // 平台
	// int32 quantity = 6; // 购买数量
	OutTradNo   int64   `protobuf:"varint,7,opt,name=out_trad_no,json=outTradNo,proto3" json:"out_trad_no,omitempty"`      // 订单号 order id
	OrderAmount float64 `protobuf:"fixed64,8,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"` // 订单金额
	Quantity    int32   `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`                           // 购买数量
	Mode        string  `protobuf:"bytes,10,opt,name=mode,proto3" json:"mode,omitempty"`                                   // game 购买游戏币
	OrderId     int64   `protobuf:"varint,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             // 订单号
	Title       string  `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                                 // 标题
}

func (x *VirtualBuyReply) Reset() {
	*x = VirtualBuyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualBuyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualBuyReply) ProtoMessage() {}

func (x *VirtualBuyReply) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualBuyReply.ProtoReflect.Descriptor instead.
func (*VirtualBuyReply) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualBuyReply) GetIsPayed() v1.VirtualPayStatus {
	if x != nil {
		return x.IsPayed
	}
	return v1.VirtualPayStatus(0)
}

func (x *VirtualBuyReply) GetEnv() int32 {
	if x != nil {
		return x.Env
	}
	return 0
}

func (x *VirtualBuyReply) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *VirtualBuyReply) GetCurrencyType() string {
	if x != nil {
		return x.CurrencyType
	}
	return ""
}

func (x *VirtualBuyReply) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *VirtualBuyReply) GetOutTradNo() int64 {
	if x != nil {
		return x.OutTradNo
	}
	return 0
}

func (x *VirtualBuyReply) GetOrderAmount() float64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *VirtualBuyReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *VirtualBuyReply) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VirtualBuyReply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *VirtualBuyReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type JSBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                // app id
	ChannelId  int32 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`    // channel id
	PurchaseId int32 `protobuf:"varint,3,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"` // 道具配置 id
	UserId     int64 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户 id
	OrderId    int64 `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // order id
}

func (x *JSBuyRequest) Reset() {
	*x = JSBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSBuyRequest) ProtoMessage() {}

func (x *JSBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSBuyRequest.ProtoReflect.Descriptor instead.
func (*JSBuyRequest) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{5}
}

func (x *JSBuyRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *JSBuyRequest) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *JSBuyRequest) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *JSBuyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JSBuyRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type JSBuyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPayed     v1.VirtualPayStatus `protobuf:"varint,1,opt,name=is_payed,json=isPayed,proto3,enum=api.wx.v1.VirtualPayStatus" json:"is_payed,omitempty"` // 是否支付成功, 0 否 1是
	OrderId     int64               `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                 // 订单号
	OrderAmount float64             `protobuf:"fixed64,3,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`                    // 订单金额
	Quantity    int32               `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                                              // 购买数量
	Title       string              `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                                                     // 标题
}

func (x *JSBuyReply) Reset() {
	*x = JSBuyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSBuyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSBuyReply) ProtoMessage() {}

func (x *JSBuyReply) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSBuyReply.ProtoReflect.Descriptor instead.
func (*JSBuyReply) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{6}
}

func (x *JSBuyReply) GetIsPayed() v1.VirtualPayStatus {
	if x != nil {
		return x.IsPayed
	}
	return v1.VirtualPayStatus(0)
}

func (x *JSBuyReply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *JSBuyReply) GetOrderAmount() float64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *JSBuyReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *JSBuyReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId int32 `protobuf:"varint,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
}

func (x *GetPurchaseRequest) Reset() {
	*x = GetPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRequest) ProtoMessage() {}

func (x *GetPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{7}
}

func (x *GetPurchaseRequest) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

type GetPurchaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId           int32   `protobuf:"varint,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`                                 // 配置 id
	Quantity             int32   `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`                                                       // 数量
	Price                float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                                                            // 支付价格（传 0 则）
	ExchangeItemId       int32   `protobuf:"varint,4,opt,name=exchange_item_id,json=exchangeItemId,proto3" json:"exchange_item_id,omitempty"`                   // 支付道具 id
	ExchangeItemQuantity int32   `protobuf:"varint,5,opt,name=exchange_item_quantity,json=exchangeItemQuantity,proto3" json:"exchange_item_quantity,omitempty"` // 支付道具数量
	ExchangeItemImage    string  `protobuf:"bytes,6,opt,name=exchange_item_image,json=exchangeItemImage,proto3" json:"exchange_item_image,omitempty"`           // 支付道具图片
	ExchangeItemName     string  `protobuf:"bytes,7,opt,name=exchange_item_name,json=exchangeItemName,proto3" json:"exchange_item_name,omitempty"`              // 支付道具名称
	Image                string  `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`                                                              // 图片
	ItemId               int32   `protobuf:"varint,9,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                             // 道具 id
	Subtitle             string  `protobuf:"bytes,10,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                                                       // 子标题
	Title                string  `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`                                                             // 标题
	Tag                  string  `protobuf:"bytes,12,opt,name=tag,proto3" json:"tag,omitempty"`                                                                 // 标签
}

func (x *GetPurchaseReply) Reset() {
	*x = GetPurchaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseReply) ProtoMessage() {}

func (x *GetPurchaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseReply.ProtoReflect.Descriptor instead.
func (*GetPurchaseReply) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{8}
}

func (x *GetPurchaseReply) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *GetPurchaseReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetPurchaseReply) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetPurchaseReply) GetExchangeItemId() int32 {
	if x != nil {
		return x.ExchangeItemId
	}
	return 0
}

func (x *GetPurchaseReply) GetExchangeItemQuantity() int32 {
	if x != nil {
		return x.ExchangeItemQuantity
	}
	return 0
}

func (x *GetPurchaseReply) GetExchangeItemImage() string {
	if x != nil {
		return x.ExchangeItemImage
	}
	return ""
}

func (x *GetPurchaseReply) GetExchangeItemName() string {
	if x != nil {
		return x.ExchangeItemName
	}
	return ""
}

func (x *GetPurchaseReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetPurchaseReply) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetPurchaseReply) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *GetPurchaseReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetPurchaseReply) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetPurchaseRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单号
}

func (x *GetPurchaseRecordRequest) Reset() {
	*x = GetPurchaseRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRecordRequest) ProtoMessage() {}

func (x *GetPurchaseRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRecordRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseRecordRequest) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{9}
}

func (x *GetPurchaseRecordRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type GetPurchaseRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemPurchaseRecodeId int64   `protobuf:"varint,1,opt,name=item_purchase_recode_id,json=itemPurchaseRecodeId,proto3" json:"item_purchase_recode_id,omitempty"` // 获兑换记录 id
	OrderId              int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                            // 订单号
	UserId               int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                               // 用户 id
	PurchaseId           int32   `protobuf:"varint,4,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`                                   // 配置 id
	AppId                int32   `protobuf:"varint,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                                                  // app id
	AccessChannelId      int32   `protobuf:"varint,6,opt,name=access_channel_id,json=accessChannelId,proto3" json:"access_channel_id,omitempty"`                  // 渠道 id
	Name                 string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                                                  // 名称
	Image                string  `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`                                                                // 图片
	Price                float64 `protobuf:"fixed64,10,opt,name=price,proto3" json:"price,omitempty"`                                                             // 价格
	Quantity             int32   `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`                                                        // 数量
	Extra                string  `protobuf:"bytes,12,opt,name=extra,proto3" json:"extra,omitempty"`                                                               // 额外信息
}

func (x *GetPurchaseRecordReply) Reset() {
	*x = GetPurchaseRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_v1_purchase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRecordReply) ProtoMessage() {}

func (x *GetPurchaseRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_item_v1_purchase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRecordReply.ProtoReflect.Descriptor instead.
func (*GetPurchaseRecordReply) Descriptor() ([]byte, []int) {
	return file_item_v1_purchase_proto_rawDescGZIP(), []int{10}
}

func (x *GetPurchaseRecordReply) GetItemPurchaseRecodeId() int64 {
	if x != nil {
		return x.ItemPurchaseRecodeId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetPurchaseId() int32 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetAccessChannelId() int32 {
	if x != nil {
		return x.AccessChannelId
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPurchaseRecordReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetPurchaseRecordReply) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetPurchaseRecordReply) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_item_v1_purchase_proto protoreflect.FileDescriptor

var file_item_v1_purchase_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x77, 0x78,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39,
	0x0a, 0x13, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x30, 0x01, 0x30,
	0x02, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x11, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x96, 0x03, 0x0a, 0x10, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x13, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x9e, 0x01, 0x0a, 0x11, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xdb, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x69, 0x73, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x6f,
	0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x99, 0x01, 0x0a, 0x0c, 0x4a, 0x53, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x0a,
	0x4a, 0x53, 0x42, 0x75, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x69, 0x73, 0x50, 0x61, 0x79,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x96, 0x03, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x32, 0xa2, 0x04, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0a, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x79,
	0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x73, 0x74, 0x2d, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x12, 0x69, 0x0a, 0x05, 0x4a, 0x53, 0x42, 0x75, 0x79, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x53, 0x42, 0x75, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x53, 0x42, 0x75, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x73, 0x74, 0x2d, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x6a, 0x73, 0x12, 0x7c, 0x0a, 0x0c,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x73, 0x74, 0x2d, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5f, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x39, 0x0a, 0x0b, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x6c, 0x75, 0x2d, 0x6c, 0x73, 0x2f,
	0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_v1_purchase_proto_rawDescOnce sync.Once
	file_item_v1_purchase_proto_rawDescData = file_item_v1_purchase_proto_rawDesc
)

func file_item_v1_purchase_proto_rawDescGZIP() []byte {
	file_item_v1_purchase_proto_rawDescOnce.Do(func() {
		file_item_v1_purchase_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_v1_purchase_proto_rawDescData)
	})
	return file_item_v1_purchase_proto_rawDescData
}

var file_item_v1_purchase_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_item_v1_purchase_proto_goTypes = []interface{}{
	(*PurchaseListRequest)(nil),      // 0: api.item.v1.PurchaseListRequest
	(*PurchaseListReply)(nil),        // 1: api.item.v1.PurchaseListReply
	(*PurchaseListItem)(nil),         // 2: api.item.v1.PurchaseListItem
	(*VirtualBuyRequest)(nil),        // 3: api.item.v1.VirtualBuyRequest
	(*VirtualBuyReply)(nil),          // 4: api.item.v1.VirtualBuyReply
	(*JSBuyRequest)(nil),             // 5: api.item.v1.JSBuyRequest
	(*JSBuyReply)(nil),               // 6: api.item.v1.JSBuyReply
	(*GetPurchaseRequest)(nil),       // 7: api.item.v1.GetPurchaseRequest
	(*GetPurchaseReply)(nil),         // 8: api.item.v1.GetPurchaseReply
	(*GetPurchaseRecordRequest)(nil), // 9: api.item.v1.GetPurchaseRecordRequest
	(*GetPurchaseRecordReply)(nil),   // 10: api.item.v1.GetPurchaseRecordReply
	(v1.VirtualPayStatus)(0),         // 11: api.wx.v1.VirtualPayStatus
}
var file_item_v1_purchase_proto_depIdxs = []int32{
	2,  // 0: api.item.v1.PurchaseListReply.list:type_name -> api.item.v1.PurchaseListItem
	11, // 1: api.item.v1.VirtualBuyReply.is_payed:type_name -> api.wx.v1.VirtualPayStatus
	11, // 2: api.item.v1.JSBuyReply.is_payed:type_name -> api.wx.v1.VirtualPayStatus
	3,  // 3: api.item.v1.Purchase.VirtualBuy:input_type -> api.item.v1.VirtualBuyRequest
	5,  // 4: api.item.v1.Purchase.JSBuy:input_type -> api.item.v1.JSBuyRequest
	0,  // 5: api.item.v1.Purchase.PurchaseList:input_type -> api.item.v1.PurchaseListRequest
	7,  // 6: api.item.v1.Purchase.GetPurchase:input_type -> api.item.v1.GetPurchaseRequest
	9,  // 7: api.item.v1.Purchase.GetPurchaseRecord:input_type -> api.item.v1.GetPurchaseRecordRequest
	4,  // 8: api.item.v1.Purchase.VirtualBuy:output_type -> api.item.v1.VirtualBuyReply
	6,  // 9: api.item.v1.Purchase.JSBuy:output_type -> api.item.v1.JSBuyReply
	1,  // 10: api.item.v1.Purchase.PurchaseList:output_type -> api.item.v1.PurchaseListReply
	8,  // 11: api.item.v1.Purchase.GetPurchase:output_type -> api.item.v1.GetPurchaseReply
	10, // 12: api.item.v1.Purchase.GetPurchaseRecord:output_type -> api.item.v1.GetPurchaseRecordReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_item_v1_purchase_proto_init() }
func file_item_v1_purchase_proto_init() {
	if File_item_v1_purchase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_item_v1_purchase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualBuyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSBuyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_v1_purchase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_v1_purchase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_v1_purchase_proto_goTypes,
		DependencyIndexes: file_item_v1_purchase_proto_depIdxs,
		MessageInfos:      file_item_v1_purchase_proto_msgTypes,
	}.Build()
	File_item_v1_purchase_proto = out.File
	file_item_v1_purchase_proto_rawDesc = nil
	file_item_v1_purchase_proto_goTypes = nil
	file_item_v1_purchase_proto_depIdxs = nil
}

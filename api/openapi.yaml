# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Game API
    version: 0.0.1
paths:
    /st-games/v1/game/announcement/list:
        post:
            tags:
                - Game
            description: 公告列表
            operationId: Game_AnnouncementList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AnnouncementListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AnnouncementListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/game/info:
        post:
            tags:
                - Game
            description: 获取房间信息
            operationId: Game_GameInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GameInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GameInfoReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/game/notify/get:
        post:
            tags:
                - Game
            description: 获取提示
            operationId: Game_GetGameNotify
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetGameNotifyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGameNotifyReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/game/notify/read:
        post:
            tags:
                - Game
            description: 阅读提示
            operationId: Game_ReadGameNotify
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReadGameNotifyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReadGameNotifyReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/game/task/list:
        post:
            tags:
                - Game
            description: 任务列表
            operationId: Game_TaskList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/game/task/reward:
        post:
            tags:
                - Game
            description: 兑换任务奖励
            operationId: Game_TaskReward
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskRewardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskRewardReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AnnouncementListItem:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                title:
                    type: string
                information:
                    type: string
                image:
                    type: string
                type:
                    type: integer
                    format: enum
                subtitle:
                    type: string
        AnnouncementListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AnnouncementListItem'
                total:
                    type: integer
                    format: int32
        AnnouncementListRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/Paginate'
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
        GameInfoReply:
            type: object
            properties:
                inGame:
                    type: boolean
                gameId:
                    type: string
                gameType:
                    type: integer
                    format: enum
                gameCategory:
                    type: integer
                    format: enum
                tableId:
                    type: string
        GameInfoRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
        GetGameNotifyReply:
            type: object
            properties:
                isShow:
                    type: boolean
        GetGameNotifyRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
                notifyType:
                    type: integer
                    format: enum
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Paginate:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                size:
                    type: integer
                    format: int32
        ReadGameNotifyReply:
            type: object
            properties: {}
        ReadGameNotifyRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
                notifyType:
                    type: integer
                    format: enum
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        TaskListItem:
            type: object
            properties:
                taskId:
                    type: integer
                    format: int32
                title:
                    type: string
                itemId:
                    type: integer
                    format: int32
                itemName:
                    type: string
                itemImage:
                    type: string
                itemQuantity:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: enum
                number:
                    type: integer
                    format: int32
                process:
                    type: integer
                    format: int32
                refreshCycle:
                    type: integer
                    format: enum
                gameType:
                    type: integer
                    format: int32
                action:
                    type: integer
                    format: int32
                url:
                    type: string
        TaskListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskListItem'
                total:
                    type: integer
                    format: int32
        TaskListRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/Paginate'
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
        TaskRewardReply:
            type: object
            properties: {}
        TaskRewardRequest:
            type: object
            properties:
                userId:
                    type: string
                taskId:
                    type: integer
                    format: int32
tags:
    - name: Game

# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Bag API
    version: 0.0.1
paths:
    /st-games/v1/bag/emoji/list:
        post:
            tags:
                - Bag
            description: 表情列表
            operationId: Bag_ListEmoji
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListEmojiRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmojiReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/bag/item/list:
        post:
            tags:
                - Bag
            description: 背包道具列表
            operationId: Bag_ListItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ItemListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ItemListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /st-games/v1/bag/item/use:
        post:
            tags:
                - Bag
            description: 使用道具
            operationId: Bag_UseItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UseItemRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UseItemReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ItemListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListItem'
                total:
                    type: integer
                    format: int32
        ItemListRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/Paginate'
                appId:
                    type: integer
                    format: int32
                userId:
                    type: string
        ListEmojiItem:
            type: object
            properties:
                itemId:
                    type: integer
                    format: int32
                itemName:
                    type: string
                itemImage:
                    type: string
                total:
                    type: integer
                    format: int32
                exchangeItemId:
                    type: integer
                    format: int32
                exchangeItemName:
                    type: string
                exchangeItemImage:
                    type: string
                exchangeItemQuantity:
                    type: integer
                    format: int32
        ListEmojiReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListEmojiItem'
                total:
                    type: integer
                    format: int32
        ListEmojiRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
        ListItem:
            type: object
            properties:
                itemId:
                    type: integer
                    format: int32
                itemCategoryId:
                    type: integer
                    format: int32
                itemFuncId:
                    type: integer
                    format: int32
                name:
                    type: string
                title:
                    type: string
                image:
                    type: string
                maxStack:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                itemExchangeWareId:
                    type: integer
                    format: int32
                itemQuantity:
                    type: integer
                    format: int32
                wareId:
                    type: integer
                    format: int32
                wareCategoryId:
                    type: integer
                    format: int32
                wareName:
                    type: string
                wareImage:
                    type: string
                wareExternalUrl:
                    type: string
                information:
                    type: string
                isPhoneBill:
                    type: boolean
                wareType:
                    type: integer
                    format: int32
        Paginate:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                size:
                    type: integer
                    format: int32
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UseItemReply:
            type: object
            properties: {}
        UseItemRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: int32
                channelId:
                    type: integer
                    format: int32
                userId:
                    type: string
                itemId:
                    type: integer
                    format: int32
                quantity:
                    type: integer
                    format: int32
tags:
    - name: Bag

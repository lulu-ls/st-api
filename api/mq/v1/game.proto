syntax = "proto3";

package api.mq.v1;

import "item/v1/asset.proto";

option go_package = "github.com/lulu-ls/st-api/api/mq/v1;v1";
option java_multiple_files = true;
option java_package = "api.mq.v1";

enum MqTopic {
	GameData = 0; // 游戏对局数据通知 飞机 炸弹 联队
	GameComplete = 1; // 完成对局
	OrderPayed = 2; // 支付通知
	GetItem = 3; // 获得道具（钻石、金币、奖券）
	RaceSignup = 4; // 赛事报名
	FreeSignup = 5; // 自由场报名
	AssetEdit = 6; // 用户资产变动
	RaceStart = 7; // 比赛开始
	RaceEnd = 8; // 比赛结束
	UserRaceEnd = 9; // 用户比赛结束
	CancelIsSignup = 10; // 取消已报名其他比赛限制
}

enum SignupType {
	CancelSignup = 0; // 取消报名
	Signup = 1; // 报名
}

enum GameDataType {
	FeiJi = 0; // 飞机
	ZhaDan = 1; // 炸弹
	LianDui = 2; // 连对
	HuoJian= 3; // 火箭
}

//enum GameCompleteIdentity {
//	NongMin = 0; // 农民
//	WaZhu = 1; // 挖主
//}

enum GetItemType {
	_ = 0;
	Gold = 1; // 金币
	Diamond = 2; // 钻石
	Ticket = 3; // 奖券
}

message GameDataRequest {
	GameDataType type = 1; // 数据类型
	int64 user_id = 2; // 用户 id
	int32 channel_id = 3; // 渠道 id
	int32 app_id = 4; // app id
	int32 quantity = 5; // 数量
}

message GameCompleteRequest {
	int64 user_id = 2; // 用户 id
	int32 channel_id = 3; // 渠道 id
	int32 app_id = 4; // app id
	bool is_wz = 5; // 是否是挖主
}

message OrderPayedRequest {
	int64 user_id = 2; // 用户 id
	int32 channel_id = 3; // 渠道 id
	int32 app_id = 4; // app id
	int64 order_id = 5; // 订单号
	double price = 6; // 支付金额
}

message GetItemRequest {
	int64 user_id = 2; // 用户 id
	int32 channel_id = 3; // 渠道 id
	int32 app_id = 4; // app id
	int32 item_id= 5; // 道具类型
	int32 quantity = 6; // 获得道具数量
	int64 seq_id =7; // 唯一流水号
}

message RaceSignUpRequest {
	int64 user_id = 1; // 用户 id
	int32 game_config_id = 2; // 赛事配置 id
	SignupType type = 3; // 报名类型 0 取消 1 报名
}

message FreeSignUpRequest {
	int64 user_id = 1; // 用户 id
	int32 game_free_config_id = 2; // 自由场 id
	SignupType type = 3; // 报名类型 0 取消 1 报名
}

message AssetEditRequest {
	int64 user_id = 1; // 用户 id
	int64 seq_id = 2; // 唯一 id
	repeated item.v1.AssetItem item = 3; // 变动详情
}

message RaceStartRequest {
	int32 game_config_id = 1; // 赛事配置 id
	int64 game_id = 2; // 比赛 id
//	repeated RaceStartUserItem user_list = 3; // 用户
}
//message RaceStartUserItem {
//	int64 user_id = 1; // 用户 id
//}

message RaceEndRequest {
	int64 game_id = 1; // 比赛 id
}

message UserRaceEndRequest {
	int64 game_id = 1; // 比赛 id
	repeated int64 user_ids = 2; // 用户 id 集合
}

message CancelIsSignupRequest {
	int64 game_id = 1; // 比赛 id
	repeated int64 user_ids = 2; // 用户 id 集合
}
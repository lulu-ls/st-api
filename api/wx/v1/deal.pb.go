// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: wx/v1/deal.proto

package v1

import (
	v1 "github.com/lulu-ls/st-api/api/order/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualPayStatus int32

const (
	VirtualPayStatus_not   VirtualPayStatus = 0
	VirtualPayStatus_payed VirtualPayStatus = 1
)

// Enum value maps for VirtualPayStatus.
var (
	VirtualPayStatus_name = map[int32]string{
		0: "not",
		1: "payed",
	}
	VirtualPayStatus_value = map[string]int32{
		"not":   0,
		"payed": 1,
	}
)

func (x VirtualPayStatus) Enum() *VirtualPayStatus {
	p := new(VirtualPayStatus)
	*p = x
	return p
}

func (x VirtualPayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualPayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wx_v1_deal_proto_enumTypes[0].Descriptor()
}

func (VirtualPayStatus) Type() protoreflect.EnumType {
	return &file_wx_v1_deal_proto_enumTypes[0]
}

func (x VirtualPayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualPayStatus.Descriptor instead.
func (VirtualPayStatus) EnumDescriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{0}
}

type MiniPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 商户系统内部的订单号，32个字符内、可包含字母，其他说明见商户订单号
	Ip      string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`                           // 用户 设备 ip
}

func (x *MiniPayRequest) Reset() {
	*x = MiniPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniPayRequest) ProtoMessage() {}

func (x *MiniPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniPayRequest.ProtoReflect.Descriptor instead.
func (*MiniPayRequest) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{0}
}

func (x *MiniPayRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *MiniPayRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type MiniPayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`             // app id
	NonceStr  string `protobuf:"bytes,2,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"`    // 随机串
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                      // 包
	SignType  string `protobuf:"bytes,4,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`    // 签名方式
	TimeStamp string `protobuf:"bytes,6,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"` // 时间戳
	PaySign   string `protobuf:"bytes,7,opt,name=pay_sign,json=paySign,proto3" json:"pay_sign,omitempty"`       // 支付签名
}

func (x *MiniPayReply) Reset() {
	*x = MiniPayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniPayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniPayReply) ProtoMessage() {}

func (x *MiniPayReply) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniPayReply.ProtoReflect.Descriptor instead.
func (*MiniPayReply) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{1}
}

func (x *MiniPayReply) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *MiniPayReply) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *MiniPayReply) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *MiniPayReply) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *MiniPayReply) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *MiniPayReply) GetPaySign() string {
	if x != nil {
		return x.PaySign
	}
	return ""
}

type JSPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 商户系统内部的订单号，32个字符内、可包含字母，其他说明见商户订单号
}

func (x *JSPayRequest) Reset() {
	*x = JSPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSPayRequest) ProtoMessage() {}

func (x *JSPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSPayRequest.ProtoReflect.Descriptor instead.
func (*JSPayRequest) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{2}
}

func (x *JSPayRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type JSPayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`             // app id
	NonceStr  string `protobuf:"bytes,2,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"`    // 随机串
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                      // 包
	SignType  string `protobuf:"bytes,4,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`    // 签名方式
	TimeStamp string `protobuf:"bytes,6,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"` // 时间戳
	PaySign   string `protobuf:"bytes,7,opt,name=pay_sign,json=paySign,proto3" json:"pay_sign,omitempty"`       // 支付签名
}

func (x *JSPayReply) Reset() {
	*x = JSPayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSPayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSPayReply) ProtoMessage() {}

func (x *JSPayReply) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSPayReply.ProtoReflect.Descriptor instead.
func (*JSPayReply) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{3}
}

func (x *JSPayReply) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *JSPayReply) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *JSPayReply) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *JSPayReply) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *JSPayReply) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *JSPayReply) GetPaySign() string {
	if x != nil {
		return x.PaySign
	}
	return ""
}

type VirtualPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`           // 商户系统内部的订单号，32个字符内、可包含字母，其他说明见商户订单号
	OutOrderId string `protobuf:"bytes,2,opt,name=out_order_id,json=outOrderId,proto3" json:"out_order_id,omitempty"` // 第三方订单号
}

func (x *VirtualPayRequest) Reset() {
	*x = VirtualPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualPayRequest) ProtoMessage() {}

func (x *VirtualPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualPayRequest.ProtoReflect.Descriptor instead.
func (*VirtualPayRequest) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualPayRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *VirtualPayRequest) GetOutOrderId() string {
	if x != nil {
		return x.OutOrderId
	}
	return ""
}

type VirtualPayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPayed      VirtualPayStatus `protobuf:"varint,1,opt,name=is_payed,json=isPayed,proto3,enum=api.wx.v1.VirtualPayStatus" json:"is_payed,omitempty"` // 是否支付成功, 0 否 1是
	Env          int32            `protobuf:"varint,2,opt,name=env,proto3" json:"env,omitempty"`                                                        // 环境配置0：现网环境（也叫正式环境）1：沙箱环境
	OfferId      string           `protobuf:"bytes,3,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`                                  // 支付应用ID（OfferId）
	CurrencyType string           `protobuf:"bytes,4,opt,name=currency_type,json=currencyType,proto3" json:"currency_type,omitempty"`                   // 当前币种 默认 "CNY"
	Platform     string           `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                               // 平台
	// int32 quantity = 6; // 购买数量
	OutTradNo   int64   `protobuf:"varint,7,opt,name=out_trad_no,json=outTradNo,proto3" json:"out_trad_no,omitempty"` // 订单号 order id
	OrderAmount float64 `protobuf:"fixed64,8,opt,name=orderAmount,proto3" json:"orderAmount,omitempty"`               // 订单数量
	Quantity    int32   `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`                      // 购买数量
	Mode        string  `protobuf:"bytes,10,opt,name=mode,proto3" json:"mode,omitempty"`                              // game 购买游戏币
	OrderId     int64   `protobuf:"varint,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`        // 订单号
}

func (x *VirtualPayReply) Reset() {
	*x = VirtualPayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualPayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualPayReply) ProtoMessage() {}

func (x *VirtualPayReply) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualPayReply.ProtoReflect.Descriptor instead.
func (*VirtualPayReply) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{5}
}

func (x *VirtualPayReply) GetIsPayed() VirtualPayStatus {
	if x != nil {
		return x.IsPayed
	}
	return VirtualPayStatus_not
}

func (x *VirtualPayReply) GetEnv() int32 {
	if x != nil {
		return x.Env
	}
	return 0
}

func (x *VirtualPayReply) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *VirtualPayReply) GetCurrencyType() string {
	if x != nil {
		return x.CurrencyType
	}
	return ""
}

func (x *VirtualPayReply) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *VirtualPayReply) GetOutTradNo() int64 {
	if x != nil {
		return x.OutTradNo
	}
	return 0
}

func (x *VirtualPayReply) GetOrderAmount() float64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *VirtualPayReply) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *VirtualPayReply) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VirtualPayReply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type AppPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`           // 商户系统内部的订单号，32个字符内、可包含字母，其他说明见商户订单号
	OutOrderId string `protobuf:"bytes,2,opt,name=out_order_id,json=outOrderId,proto3" json:"out_order_id,omitempty"` // 第三方订单号
}

func (x *AppPayRequest) Reset() {
	*x = AppPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPayRequest) ProtoMessage() {}

func (x *AppPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPayRequest.ProtoReflect.Descriptor instead.
func (*AppPayRequest) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{6}
}

func (x *AppPayRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AppPayRequest) GetOutOrderId() string {
	if x != nil {
		return x.OutOrderId
	}
	return ""
}

type AppPayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`             // 微信开放平台审核通过的移动应用appid 。示例值：wx8888888888888888
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"` // 请填写商户号 mch id 对应的值。示例值：1900000109
	PrepayId  string `protobuf:"bytes,3,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`    // 微信返回的支付交易会话ID，该值有效期为2小时。示例值： WX1217752501201407033233368018
	Package   string `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`                      // 	暂填写固定值Sign=WXPay 示例值：Sign=WXPay
	NonceStr  string `protobuf:"bytes,5,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"`    // 	随机字符串，不长于32位。推荐随机数生成算法。示例值： 5K8264ILTKCH16CQ2502SI8ZNMTM67VS
	Timestamp string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // 时间戳，标准北京时间，时区为东八区，自1970年1月1日 0点0分0秒以来的秒数。注意：部分系统取到的值为毫秒级，需要转换成秒(10位数字)。示例值：1412000000
	Sign      string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`                            // 签名，使用字段appId、timeStamp、nonceStr、prepay id计算得出的签名值 注意：取值RSA格式
	OrderId   int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`      // 盛唐订单号
}

func (x *AppPayReply) Reset() {
	*x = AppPayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_v1_deal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPayReply) ProtoMessage() {}

func (x *AppPayReply) ProtoReflect() protoreflect.Message {
	mi := &file_wx_v1_deal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPayReply.ProtoReflect.Descriptor instead.
func (*AppPayReply) Descriptor() ([]byte, []int) {
	return file_wx_v1_deal_proto_rawDescGZIP(), []int{7}
}

func (x *AppPayReply) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppPayReply) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *AppPayReply) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *AppPayReply) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *AppPayReply) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *AppPayReply) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AppPayReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *AppPayReply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

var File_wx_v1_deal_proto protoreflect.FileDescriptor

var file_wx_v1_deal_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x29, 0x0a, 0x0c, 0x4a, 0x53, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x4a, 0x53, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x50, 0x0a, 0x11, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x69, 0x73, 0x50, 0x61,
	0x79, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x5f, 0x6e, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x4e,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x0d, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe4, 0x01, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x2a, 0x26, 0x0a, 0x10, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x64, 0x10, 0x01, 0x32, 0x9a, 0x02, 0x0a, 0x04,
	0x44, 0x65, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x79, 0x12,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x4a, 0x53, 0x50,
	0x61, 0x79, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x53, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x12,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x35, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x78, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x6c, 0x75, 0x2d, 0x6c, 0x73, 0x2f, 0x73, 0x74, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wx_v1_deal_proto_rawDescOnce sync.Once
	file_wx_v1_deal_proto_rawDescData = file_wx_v1_deal_proto_rawDesc
)

func file_wx_v1_deal_proto_rawDescGZIP() []byte {
	file_wx_v1_deal_proto_rawDescOnce.Do(func() {
		file_wx_v1_deal_proto_rawDescData = protoimpl.X.CompressGZIP(file_wx_v1_deal_proto_rawDescData)
	})
	return file_wx_v1_deal_proto_rawDescData
}

var file_wx_v1_deal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wx_v1_deal_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_wx_v1_deal_proto_goTypes = []interface{}{
	(VirtualPayStatus)(0),      // 0: api.wx.v1.VirtualPayStatus
	(*MiniPayRequest)(nil),     // 1: api.wx.v1.MiniPayRequest
	(*MiniPayReply)(nil),       // 2: api.wx.v1.MiniPayReply
	(*JSPayRequest)(nil),       // 3: api.wx.v1.JSPayRequest
	(*JSPayReply)(nil),         // 4: api.wx.v1.JSPayReply
	(*VirtualPayRequest)(nil),  // 5: api.wx.v1.VirtualPayRequest
	(*VirtualPayReply)(nil),    // 6: api.wx.v1.VirtualPayReply
	(*AppPayRequest)(nil),      // 7: api.wx.v1.AppPayRequest
	(*AppPayReply)(nil),        // 8: api.wx.v1.AppPayReply
	(*v1.ConfirmPayReply)(nil), // 9: api.order.v1.ConfirmPayReply
}
var file_wx_v1_deal_proto_depIdxs = []int32{
	0, // 0: api.wx.v1.VirtualPayReply.is_payed:type_name -> api.wx.v1.VirtualPayStatus
	1, // 1: api.wx.v1.Deal.MiniPay:input_type -> api.wx.v1.MiniPayRequest
	3, // 2: api.wx.v1.Deal.JSPay:input_type -> api.wx.v1.JSPayRequest
	5, // 3: api.wx.v1.Deal.VirtualPay:input_type -> api.wx.v1.VirtualPayRequest
	7, // 4: api.wx.v1.Deal.AppPay:input_type -> api.wx.v1.AppPayRequest
	9, // 5: api.wx.v1.Deal.MiniPay:output_type -> api.order.v1.ConfirmPayReply
	9, // 6: api.wx.v1.Deal.JSPay:output_type -> api.order.v1.ConfirmPayReply
	9, // 7: api.wx.v1.Deal.VirtualPay:output_type -> api.order.v1.ConfirmPayReply
	9, // 8: api.wx.v1.Deal.AppPay:output_type -> api.order.v1.ConfirmPayReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wx_v1_deal_proto_init() }
func file_wx_v1_deal_proto_init() {
	if File_wx_v1_deal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wx_v1_deal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniPayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSPayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualPayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_v1_deal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wx_v1_deal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wx_v1_deal_proto_goTypes,
		DependencyIndexes: file_wx_v1_deal_proto_depIdxs,
		EnumInfos:         file_wx_v1_deal_proto_enumTypes,
		MessageInfos:      file_wx_v1_deal_proto_msgTypes,
	}.Build()
	File_wx_v1_deal_proto = out.File
	file_wx_v1_deal_proto_rawDesc = nil
	file_wx_v1_deal_proto_goTypes = nil
	file_wx_v1_deal_proto_depIdxs = nil
}

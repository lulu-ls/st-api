syntax = "proto3";

package api.game.v1;

import "google/api/annotations.proto";
import "common/v1/common.proto";
import "validate/validate.proto";

option go_package = "github.com/lulu-ls/st-api/api/game/v1;v1";
option java_multiple_files = true;
option java_package = "api.game.v1";

service Game {
	// 公告列表
	rpc AnnouncementList (AnnouncementListRequest) returns (AnnouncementListReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/announcement/list",
			body: "*",
		};
	};

	// TODO 任务列表 暂时废弃
//	rpc TaskList (TaskListRequest) returns (TaskListReply) {
//		option (google.api.http) = {
//			post: "/st-games/v1/game/task/list",
//			body: "*",
//		};
//	};

	// 任务列表
	rpc ActivityList (ActivityListRequest) returns (ActivityListReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/activity/list",
			body: "*",
		};
	};

	// 任务详情
	rpc TaskDetail (TaskDetailRequest) returns (TaskDetailReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/activity/detail",
			body: "*",
		};
	};

	// 兑换任务奖励
	rpc TaskReward (TaskRewardRequest) returns (TaskRewardReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/task/reward",
			body: "*",
		};
	};

	// 获取房间信息
	rpc GameInfo (GameInfoRequest) returns (GameInfoReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/info",
			body: "*",
		};
	};

	// 获取提示
	rpc GetGameNotify (GetGameNotifyRequest) returns (GetGameNotifyReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/notify/get",
			body: "*",
		};
	};

	// 阅读提示
	rpc ReadGameNotify (ReadGameNotifyRequest) returns (ReadGameNotifyReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/notify/read",
			body: "*",
		};
	};

	// 获取 app 功能配置
	rpc GetAppConfig (GetAppConfigRequest) returns (GetAppConfigReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/dict/list",
			body: "*",
		};
	};

	// 检查报名
	rpc CheckSignup (CheckSignupRequest) returns (CheckSignupReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/check/signup",
			body: "*",
		};
	};

	// 签到列表
	rpc SignList (SignListRequest) returns (SignListReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/sign/list",
			body: "*",
		};
	};

	// 签到
	rpc SignIn (SignInRequest) returns (SignInReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/sign/in",
			body: "*",
		};
	};

	// 红点处理
	rpc RedList (RedListRequest) returns (RedListReply) {
		option (google.api.http) = {
			post: "/st-games/v1/game/red/list",
			body: "*",
		};
	};

}

// 公告类别
enum AnnouncementType {
	_1 = 0; // 未知
	Text = 1; // 文本
	Image = 2; // 图片
}

// 任务进度状态
enum TaskStatus {
	undone = 0; // 未完成
	done = 1; // 已完成
	received = 2; // 已发放奖励
}

// 任务刷新周期 0无 1 天 2周 3 月
enum RefreshCycle {
	none = 0;
	day = 1;
	week = 2;
	month = 3;
}

// 游戏类型
enum GameType {
	GameTypeUnspecified = 0;
	GameTypeDigHole = 1; //挖坑
	GameTypeLandlord = 2; //斗地主
	GameTypeMahjong = 3; //麻将
}

// 游戏类别
enum GameCategory {
	GameCategoryUnspecified = 0;
	GameCategoryGold = 1; //金币场（自由场）
	GameCategoryCompetition = 2; //竞技场
	GameCategoryPrivate = 3; //好友房
}

// 游戏通知
enum GameNotifyType {
	_2 = 0;
	RegisterAward = 1; // 注册奖励
}

// 设备类型
enum DeviceType {
	_4 = 0; // 忽略
	Android = 1; // 安卓
	iOS = 2; // ios
	Windows = 3; // Windows
//	Marmalade = 4; // Marmalade
//	Linux = 5; // Linux
}

// 版本类型
enum VersionType {
	_3 = 0;
	audit = 1; // 审核版本
	develop = 2; // 开发版
	trial = 3; // 体验版本
	release = 4; // 正式版
}

// 活动类型 跳转类型：1:url 2:game_category_id 3:竞技场 4:自由场  5:充值 6:分享 7：task
enum TaskAction {
		_ = 0;
		URL = 1;
		GAME_CATEGORY = 2;
		GAME_CONFIG = 3;
		GAME_FREE_CONFIG = 4;
		RECHARGE = 5;
		SHARE = 6;
		TASK = 7;
}

// 任务配置类型 1游戏 2充值 3签到
enum TaskType {
	_5 = 0;
	GAME = 1;
	T_RECHARGE = 2;
	Sign = 3;
}

// 充值类型 1指定金额次数 2累计金额
enum TaskRechargeType {
	_6 = 0;
	FIX = 1;
	TOTAL =2;
}

// 游戏奖励类型 1:对局2：胜场3：排名
enum TaskGameType {
	_7 = 0;
	PLAY = 1;
	WIN = 2;
	RANK = 3;
}

// 1:7日签到(周签),2:累积签到
enum SignConfigType {
	_8 = 0;
	WEEKLY = 1;
	DAYS = 2;
}

// 1 普通签到 2 看视频签到 3 补签
enum SignType {
	_9 = 0;
	NORMAL = 1;
	AWARD = 2;
	REPAIR = 3;
}

// SignStatus 0 已过期 1 已领取 2 待领取 3 未到期
enum SingStatus {
	EXPIRE = 0;
	RECEIVED = 1;
	AVAILABLE = 2;
	UNDUE = 3;
}

// 签到奖励类型 signItemType 1签到 2视频
enum SignItemType {
	_10 = 0;
	SIT_NORMAL = 1;
	SIT_AWARD = 2;
}

message AnnouncementListRequest {
	common.v1.Paginate page = 1;
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
}
message AnnouncementListReply {
	repeated AnnouncementListItem list = 1; // 列表
	int32 total = 2; // 合计
}
message AnnouncementListItem {
	int32 id = 1; // 通知 id
	string title = 2; // 标题
	string information = 3; // 内容
	string image = 4; // 图片
	AnnouncementType type = 5; // 类型
	string subtitle = 6; // 副标题
}

//message TaskListRequest {
//	common.v1.Paginate page = 1;
//	int32 app_id = 2; // app id
//	int32 channel_id = 3; // channel id
//	int64 user_id = 4; // 用户 id
//}
//message TaskListReply {
//	repeated TaskListItem list = 1; // 列表
//	int32 total = 2; // 数量
//}
//message TaskListItem {
//	int32 task_id = 1; // 任务 id
//	string title = 2; // 任务标题
//	int32 item_id = 3; // 道具 id
//	string item_name = 4; // 奖励道具名称
//	string item_image = 5; // 奖励道具图片
//	int32 item_quantity = 6; // 奖励道具数量
//	TaskStatus status = 7; // 状态
//	int32 number = 8; // 任务需要完成数量
//	int32 process = 9; // 当前完成进度
//	RefreshCycle refresh_cycle = 10; // 刷新周期
//	int32 game_type = 11; // 游戏类型：1=竞技场，2=自由场
//	int32 action = 12; // 活动类型 跳转类型：1:url 2:game_category_id 3:竞技场 4:自由场  5:充值 6:分享 7：task
//	string url = 13; // 跳转地址 action = 1 可用
//}

message ActivityListRequest {
	common.v1.Paginate page = 1;
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id
}
message ActivityListReply {
	repeated ActivityListItem list = 1; // 列表
	int32 total = 2; // 数量
}
message ActivityListItem {
	int32 activity_id = 1; // 配置 id
	string title = 2; // 标题
	string subtitle = 3; // 子标题
	string information = 4; // 描述
	string image = 5; // 图片
	int32 type = 6; // 类型 1:游戏 2:充值 3:签到
	int32 action = 7; // 活动类型 跳转类型：1:url 2:game_category_id 3:竞技场 4:自由场  5:充值 6:分享 7：task
}

message TaskDetailRequest {
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id  [(validate.rules).int64.gt =  0]
	int32 activity_id = 5 [(validate.rules).int32.gt =  0]; // 配置 id
}
message TaskDetailReply {
	repeated TaskListItem list = 1; // 活动任务列表
}
message TaskListItem {
	int32 task_id = 1; // 配置 id
	string title = 2; // 标题
	int32 action = 3; // 跳转方式 // 活动类型 跳转类型：1:url 2:game_category_id 3:竞技场 4:自由场  5:充值 6:分享 7：task
	string url = 4; // 跳转地址 action = 1
	int32 number = 5; // 任务需要完成数量
	int32 process = 6; // 当前完成进度
	TaskStatus status = 7; // 状态
//  double amount = 7; // 需要充值金额 action = 5
//	double process_amount = 8; // 已充值金额
	repeated TaskListAwardItem award = 8; // 奖励
}
message TaskListAwardItem { // 道具
	int32 item_id = 3; // 道具 id
	string name = 4; // 奖励道具名称
	string image = 5; // 奖励道具图片
	int32 quantity = 6; // 奖励道具数量
}

message TaskRewardRequest {
	int64 user_id = 1; // 用户 id
	repeated int32 task_ids = 2 [(validate.rules).repeated = {min_items: 1, items: {int32: {gt: 0}}}]; // 任务 id
}
message TaskRewardReply {

}

message GameInfoRequest{
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id
}
message GameInfoReply{
	bool in_game = 1; // 是否在游戏中
	string game_id = 2; // 游戏 id
	GameType game_type = 3; // 游戏类型
	GameCategory game_category = 4; // 游戏类别
	string table_id = 5; // 桌号
}

message GetGameNotifyRequest {
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id
	GameNotifyType notify_type = 5; // 通知类型
}
message GetGameNotifyReply {
	bool is_show = 1; // 是否展示
}

message ReadGameNotifyRequest {
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id
	GameNotifyType notify_type = 5; // 通知类型
}
message ReadGameNotifyReply {

}

message GetAppConfigRequest {
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	string version = 4; // 版本 id
	DeviceType device = 5; // 1 android 2 ios
	VersionType version_type = 6; // 配置类型
}
message GetAppConfigReply {
	repeated GetAppConfigItem list = 1; // 列表
}
message GetAppConfigItem {
	int32 app_config_id = 1; // 字典 id
	string key = 2; // 键
	string value = 3; // 值
//	int32 action = 4; // 动作
}

message CheckSignupRequest {
	int64 user_id = 3; // 用户 id
	int32 game_config_id = 4; // 游戏配置 id
}
message CheckSignupReply {

}

message SignListRequest{
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
	int64 user_id = 4; // 用户 id
}
message SignListReply {
	repeated SignListItem list = 1; // 列表
	int32 total = 2; // 数量
}
message SignListItem{
	int32 sign_config_id = 1; // 签到配置奖励
	SignConfigType type = 2; // 1:7日签到(周签),2:累积签到
	string title = 3; // 标题
	string image = 4; // 图片
	int32 day = 5; // 第几天/周几
	string day_name = 6; // 名称
	SingStatus status = 7; // 状态
	repeated SignAwardItem award = 8; // 奖励
}
message SignAwardItem {
	int32 item_id = 3; // 道具 id
	string name = 4; // 奖励道具名称
	string image = 5; // 奖励道具图片
	int32 quantity = 6; // 奖励道具数量
	int32 item_type = 7; // 类型 1 普通奖励 2 视频奖励
}

message SignInRequest {
	int32 sign_config_id = 1 [(validate.rules).int32.gt =  0]; // 签到配置奖励
	SignType sign_type = 2; // 签到类型
	int64 user_id = 3; // 用户 id
}
message SignInReply {

}

message RedListRequest {
	int64 user_id = 1; // 用户 id
	int32 app_id = 2; // app id
	int32 channel_id = 3; // channel id
}
message RedListReply {
	SignIn sign_in = 1; // 签到
	repeated Activity activity = 2; // 活动
	repeated Announcement announcement = 3; // 公告
}
message SignIn {
	bool red = 1; // 今日是否可签到
}
message Activity {
	int32 activity_id = 1; // 活动 id
	bool red = 2; // 是否有已完成且未领取的任务
}
message Announcement {
	int32 id = 1; // 公告 id
}